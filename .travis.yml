os: linux
dist: trusty
language: python

python:
    - "3.6"

env:
    jobs:
        - MODULE=alignment

#cache:
#  bundler: true
#  directories:
#    - $HOME/docker

before_install:
    - if [[ $TRAVIS_BRANCH == "master" ]]; then export DOCKER_TAG=latest;
      else export DOCKER_TAG=$TRAVIS_BRANCH; fi

after_success:
    - bash <(curl -s https://codecov.io/bash)

before_deploy:
    - echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin

deploy:
    - provider: script
      skip_cleanup: true
      script: docker tag $MODULE $DOCKER_USERNAME/$MODULE &&
              docker push $DOCKER_USERNAME/$MODULE &&
              docker images
      on:
          tag: false
          branch: master
    - provider: script
      skip_cleanup: true
      script: docker tag $MODULE $DOCKER_USERNAME/$MODULE:$TRAVIS_TAG &&
              docker push $DOCKER_USERNAME/$MODULE:$TRAVIS_TAG &&
              docker images
      on:
          tag: true
          branch: master
    - provider: script
      skip_cleanup: true
      script: docker tag $MODULE $DOCKER_USERNAME/$MODULE:$TRAVIS_BRANCH &&
              docker push $DOCKER_USERNAME/$MODULE:$TRAVIS_BRANCH &&
              docker images
      on:
          tag: false
          all_branches: true
          condition: $TRAVIS_BRANCH != "master"

notifications:
  email:
    if: branch = master
    recipients:
      - giesselmann@molgen.mpg.de
    on_success: never
    on_failure: always

jobs:
    include:
        - stage: nanopype base
          env:
              - MODULE=base
          script:
              - docker build -t $MODULE -f singularity/$MODULE/Dockerfile .
        - stage: nanopype build
          env:
              - MODULE=build
          script:
              - docker build -t $MODULE -f singularity/$MODULE/Dockerfile --build-arg TAG=$DOCKER_TAG .
        - stage: nanopype modules
          script:
              - docker build -t $MODULE -f singularity/$MODULE/Dockerfile --build-arg TAG=$DOCKER_TAG .
        - stage: test
          install:
              - pip install -r requirements.txt
          script:
              - docker run --rm $DOCKER_USERNAME/base python3 -c "import h5py"
